services:
  nginx: 
    image: nginx:alpine
    container_name: nginx-proxy
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount Let's Encrypt certs
    restart: unless-stopped
    depends_on:
      - grafana
      - openwebui
  grafana:
    image: grafana/otel-lgtm:latest
    container_name: lgtm
    expose: 
      - "3000" # Grafana UI 
      - "4317"    # OTLP/gRPC (internal Docker network only)
      - "4318"    # OTLP/HTTP (internal Docker network only)
    restart: unless-stopped
    environment: 
    # TODO: Move these credentials to env variables
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=supersecret
  
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    depends_on:
      - grafana
    expose: 
      - "8080"
    volumes:
      - open-webui:/app/backend/data
    restart: unless-stopped
    environment:
      - LICENSE_KEY=${LICENSE_KEY}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      
      # Telemetry
      # TODO: Find a way to secure the OTLP
      - ENABLE_OTEL=true
      - ENABLE_OTEL_METRICS=true
      - OTEL_EXPORTER_OTLP_INSECURE=true # Use insecure connection for OTLP, remove in production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://grafana:4317
      - OTEL_SERVICE_NAME=open-webui

      # Managed Postgres and Managed Redis 
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
volumes:
  open-webui: {}