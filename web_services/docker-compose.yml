services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - grafana
      - openwebui
      
  grafana:
    image: grafana/otel-lgtm:latest
    container_name: lgtm
    expose: 
      - "3000" # Grafana UI 
      - "4317"    # OTLP/gRPC
      - "4318"    # OTLP/HTTP
    restart: unless-stopped
    environment: 
    # TODO: Move these credentials to env variables
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=supersecret
  
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    depends_on:
      - grafana
    expose: 
      - "8080"
    volumes:
      - open-webui:/app/backend/data
    restart: unless-stopped
    environment:
      - LICENSE_KEY=${LICENSE_KEY}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - WEBUI_URL=https://app.publicai.company
      
      # Telemetry
      # TODO: Find a way to secure the OTLP
      - ENABLE_OTEL=true
      - ENABLE_OTEL_METRICS=true
      - OTEL_EXPORTER_OTLP_INSECURE=true # Use insecure connection for OTLP, remove in production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://grafana:4317
      - OTEL_SERVICE_NAME=open-webui

      # Managed Postgres and Managed Redis 
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}

      # Storage config
      - STORAGE_PROVIDER=s3
      - S3_BUCKET_NAME=publicai
      - S3_ENDPOINT_URL=https://publicai.fra1.digitaloceanspaces.com
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_REGION_NAME=fra1
      - S3_KEY_PREFIX=uploads/

      # WebSocket broker:
      - ENABLE_WEBSOCKET_SUPPORT=true 
      - WEBSOCKET_MANAGER=redis
      - WEBSOCKET_REDIS_URL=${REDIS_URL}

      # TODO: Setup the vector database
      # - VECTOR_DB=pgvector
      # - PGVECTOR_DB_URL=${DATABASE_URL}

      # TODO: Setup the embedding engine to use OpenAI APIs
      # - RAG_EMBEDDING_ENGINE=openai
      # - RAG_EMBEDDING_MODEL=text-embedding-3-small

      # TODO: Setup task models 
      # - TASK_MODEL
      # - TASK_MODEL_EXTERNAL 

      # OAUTH
      - ENABLE_LOGIN_FORM=false
      - ENABLE_OAUTH_SIGNUP=true
      - OAUTH_UPDATE_PICTURE_ON_LOGIN=true
      - ENABLE_OAUTH_ROLE_MANAGEMENT=true
      - ENABLE_OAUTH_GROUP_MANAGEMENT=true
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OPENID_PROVIDER_URL=https://accounts.google.com/.well-known/openid-configuration


volumes:
  open-webui: {}